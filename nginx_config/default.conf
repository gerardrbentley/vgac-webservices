# Redirect all http to https
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    return 301 https://$host$request_uri;
}

# Serve https connections
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name  vgac.cs.pomona.edu;

    # Add /tagging/ prefix for html file names
    rewrite ^/staging/tagging/(.*)$ /staging/html/$1.html last;
    rewrite ^/tagging/(.*)$ /html/$1.html last;

    # staging db api
    location ~ ^/staging/api/(.*)$ {
        # Resolves to docker host (doesn't crash if service is not available)
        resolver 127.0.0.11 valid=30s;
        # Connect to docker container in network via container name, port based on dbapi web app
        set $upstream http://dbapi-staging:5000;
        # Get url after /staging/api/..XYZ and put it after dbapi-staging:5000/..XYZ
        proxy_pass $upstream/$1$is_args$args;
    }

    # production db api
    location ~ ^/api/(.*)$ {
        resolver 127.0.0.11 valid=30s;
        set $upstream http://dbapi:5000;
        proxy_pass $upstream/$1$is_args$args;
    }

    # staging expert tagging api
    location ~ ^/staging/expert/(.*)$ {
        resolver 127.0.0.11 valid=30s;
        set $upstream http://expert-staging:5000;
        proxy_pass $upstream/$1$is_args$args;
    }

    # production expert tagging api
    location ~ ^/expert/(.*)$ {
        resolver 127.0.0.11 valid=30s;
        set $upstream http://expert:5000;
        proxy_pass $upstream/$1$is_args$args;
    }

    # staging single tile tagging api
    location ~ ^/staging/single-tile/(.*)$ {
        resolver 127.0.0.11 valid=30s;
        set $upstream http://single-tile-staging:5000;
        proxy_pass $upstream/$1$is_args$args;
    }

    # production single tile tagging api
    location ~ ^/single-tile/(.*)$ {
        resolver 127.0.0.11 valid=30s;
        set $upstream http://single-tile:5000;
        proxy_pass $upstream/$1$is_args$args;
    }

    # Keep these at the bottom to default other routes and /staging/ prefixed routes
    location ~ ^/staging/(.*)$ {
        resolver 127.0.0.11 valid=30s;
        set $upstream http://reverse-proxy-staging;
        proxy_pass $upstream/$1$is_args$args;
    }

    # Serve content from static folder, default to 404 error page
    root /static;

    error_page 404 /html/404.html;
    error_page 500 /html/500.html;

    location / {
        index /html/index.html;
        try_files $uri $uri/ /html/404.html;
        # try_files $uri /html/404.html;
    }
}
